basePath: /
definitions:
  model.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.TaskStatus:
    enum:
    - pending
    - inprogress
    - done
    type: string
    x-enum-varnames:
    - Pending
    - InProgress
    - Done
host: localhost:8080
info:
  contact: {}
  description: This is a simple Task Management microservice with CRUD, pagination,
    and filtering.
  title: Task Management API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks with optional pagination and filtering by status
      parameters:
      - description: Task status filter
        in: query
        name: status
        type: string
      - default: 10
        description: Limit number of tasks
        in: query
        name: limit
        type: integer
      - default: 1
        description: Skip tasks for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List tasks
      tags:
      - tasks
schemes:
- http
swagger: "2.0"
